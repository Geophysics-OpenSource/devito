#! /bin/csh -f

/bin/rm -rf .gmt* ctbl* gmt*

set org = ( 255/165/0 )
set red = ( 255/0/0 )
set blu = ( 0/0/255 )
set blk = ( 0/0/0 )
set wht = ( 255/255/255 )
set grn = ( 00/150/0 )
set gra = ( 120/120/120 )
set pur = ( 200/0/200 )

gmtset MAP_ORIGIN_X 2.0i MAP_ORIGIN_Y 2.0i PS_MEDIA Custom_4000x4000 
gmtset FONT_ANNOT_PRIMARY "20,Courier-Bold,${blk}"
gmtset FONT_ANNOT_SECONDARY "20,Courier-Bold,${blk}"
gmtset FONT_LABEL "20,Courier-Bold,${blk}"
gmtset FONT_TITLE "24,Courier-Bold,${blk}"

set density = ( -density 50 )
set density = ( -density 100 )
set density = ( -density 120 )

set xsize1 = 12
set ysize1 = 8

set xmin   = (  0 )
set xmax   = ( 65 )
set dx     = (  4 )
set ymin   = (  0.00 )
set ymax   = (  4.15 )
set dy     = (  0.25 )
echo "xmin,xmax,dx; ${xmin} ${xmax} ${dx}"
echo "ymin,ymax,dy; ${ymin} ${ymax} ${dy}"

set title  = ( "Devito on AMD 7502" )

set xtitle = ( "Number of threads" )
set ytitle = ( "Gigacells/sec" )

set rscale = ( -JX${xsize1}i/${ysize1}i -R$xmin/$xmax/$ymin/$ymax )

set name   = ( threadscaling.mpi )
set ps     = ( ${name}.ps )
set png    = ( ${name}.png )

set label  = ( "2 numa nodes" )

/bin/rm -rf ${png} ${ps} 
psbasemap -K ${rscale} "-B${dx}:${xtitle}:/${dy}:${ytitle}::.${title}:WeSn" > $ps

set types = ( 601.mpi1 601.mpifull 881.mpi1 881.mpifull )
foreach type ( ${types} )
    echo " "
    ls -d ${type}/mpi.*txt
    grep GPts ${type}/mpi.*txt | grep Achiev | sort -n | uniq | cut -d "." -f 3 > threads.x.${type}.txt
    grep GPts ${type}/mpi.*txt | grep Achiev | sort -n | uniq | cut -d " " -f 5 > threads.y.${type}.txt
    echo " " 
    paste threads.x.${type}.txt threads.y.${type}.txt 
end

set size = 6p

paste threads.x.601.mpi1.txt threads.y.601.mpi1.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W2.0p,${red} >> $ps
paste threads.x.601.mpi1.txt threads.y.601.mpi1.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W1.0p,${red} -Sc${size} -G${red} >> $ps

paste threads.x.601.mpifull.txt threads.y.601.mpifull.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W2.0p,${grn} >> $ps
paste threads.x.601.mpifull.txt threads.y.601.mpifull.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W1.0p,${grn} -Sc${size} -G${grn} >> $ps

paste threads.x.881.mpi1.txt threads.y.881.mpi1.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W2.0p,${blu} >> $ps
paste threads.x.881.mpi1.txt threads.y.881.mpi1.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W1.0p,${blu} -Sc${size} -G${blu} >> $ps

paste threads.x.881.mpifull.txt threads.y.881.mpifull.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W2.0p,${blk} >> $ps
paste threads.x.881.mpifull.txt threads.y.881.mpifull.txt | awk '{ print $1, $2 }' | psxy -O -K ${rscale} -W1.0p,${blk} -Sc${size} -G${blk} >> $ps

set cvx_601 = ( "/data/esdrd/wask/advance/R5000.10.0v6/SeisSpace.cvxfwilib/test/time_domain/tmp.3d.n64.compare.gcc7.3.0.iso.txt" )
set cvx_881 = ( "/data/esdrd/wask/advance/R5000.10.0v6/SeisSpace.cvxfwilib/test/time_domain/tmp.3d.n64.897,897,387.gcc7.3.0.iso.txt " )

tail -n +2 ${cvx_601} | awk '{ print $1, $2/1000 }' | psxy -O -K ${rscale} -W2.0p,${pur} >> $ps
tail -n +2 ${cvx_601} | awk '{ print $1, $2/1000 }' | psxy -O -K ${rscale} -W1.0p,${pur} -Sc${size} -G${pur} >> $ps

tail -n +2 ${cvx_881} | awk '{ print $1, $2/1000 }' | psxy -O -K ${rscale} -W2.0p,${gra} >> $ps
tail -n +2 ${cvx_881} | awk '{ print $1, $2/1000 }' | psxy -O -K ${rscale} -W1.0p,${gra} -Sc${size} -G${gra} >> $ps

set max_devito_601_mpi1 = ( `cat threads.y.601.mpi1.txt | awk '{ printf "%.2f\n", $1 }' | sort -n | tail -n 1` )
set max_devito_601_mpif = ( `cat threads.y.601.mpifull.txt | awk '{ printf "%.2f\n", $1 }' | sort -n | tail -n 1` )
set max_devito_881_mpi1 = ( `cat threads.y.881.mpi1.txt | awk '{ printf "%.2f\n", $1 }' | sort -n | tail -n 1` )
set max_devito_881_mpif = ( `cat threads.y.881.mpifull.txt | awk '{ printf "%.2f\n", $1 }' | sort -n | tail -n 1` )
set max_cvx_601         = ( `cat ${cvx_601} | awk '{ printf "%.2f\n", $2/1000 }' | sort -n | tail -n 1` )
set max_cvx_881         = ( `cat ${cvx_881} | awk '{ printf "%.2f\n", $2/1000 }' | sort -n | tail -n 1` )

/bin/rm -rf t.legend
echo "N 1.33 " >> t.legend
echo "C $red" >> t.legend
echo "L 16 Courier-Bold L \ ${max_devito_601_mpi1} GPts/s (601,601,601) Devito MPI=1    -- no optimal cache blocking" >> t.legend
echo "C $grn" >> t.legend
echo "L 16 Courier-Bold L \ ${max_devito_601_mpif} GPts/s (601,601,601) Devito MPI=full -- no optimal cache blocking" >> t.legend
echo "C $blu" >> t.legend
echo "L 16 Courier-Bold L \ ${max_devito_881_mpi1} GPts/s (881,881,371) Devito MPI=1    -- no optimal cache blocking" >> t.legend
echo "C $blk" >> t.legend
echo "L 16 Courier-Bold L \ ${max_devito_881_mpif} GPts/s (881,881,371) Devito MPI=full -- no optimal cache blocking" >> t.legend
echo "C $pur" >> t.legend
echo "L 16 Courier-Bold L \ ${max_cvx_601} GPts/s (601,601,601) CVX             -- no optimal cache blocking" >> t.legend
echo "C $gra" >> t.legend
echo "L 16 Courier-Bold L \ ${max_cvx_881} GPts/s (881,881,371) CVX             -- no optimal cache blocking" >> t.legend
pslegend t.legend -O -K $rscale -Fg+255 -Dx0.025i/7.75i+w2i/0.2i >> $ps
/bin/rm -rf t.legend 

set c = ( gm convert -trim -bordercolor white -border 20x20 -rotate 90 $density $ps $png )
echo $c ; $c 

gm animate ${png}
